#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApplication6
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="POSDB")]
	public partial class DataClassesPOSDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertLoan(Loan instance);
    partial void UpdateLoan(Loan instance);
    partial void DeleteLoan(Loan instance);
    partial void InsertLoanAutomotive(LoanAutomotive instance);
    partial void UpdateLoanAutomotive(LoanAutomotive instance);
    partial void DeleteLoanAutomotive(LoanAutomotive instance);
    partial void InsertLoanFirearm(LoanFirearm instance);
    partial void UpdateLoanFirearm(LoanFirearm instance);
    partial void DeleteLoanFirearm(LoanFirearm instance);
    partial void InsertLoanGeneral(LoanGeneral instance);
    partial void UpdateLoanGeneral(LoanGeneral instance);
    partial void DeleteLoanGeneral(LoanGeneral instance);
    partial void InsertLoanJewelry(LoanJewelry instance);
    partial void UpdateLoanJewelry(LoanJewelry instance);
    partial void DeleteLoanJewelry(LoanJewelry instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertPurchaseAutomotive(PurchaseAutomotive instance);
    partial void UpdatePurchaseAutomotive(PurchaseAutomotive instance);
    partial void DeletePurchaseAutomotive(PurchaseAutomotive instance);
    partial void InsertPurchaseFirearm(PurchaseFirearm instance);
    partial void UpdatePurchaseFirearm(PurchaseFirearm instance);
    partial void DeletePurchaseFirearm(PurchaseFirearm instance);
    partial void InsertPurchaseGeneral(PurchaseGeneral instance);
    partial void UpdatePurchaseGeneral(PurchaseGeneral instance);
    partial void DeletePurchaseGeneral(PurchaseGeneral instance);
    partial void InsertPurchaseJewelry(PurchaseJewelry instance);
    partial void UpdatePurchaseJewelry(PurchaseJewelry instance);
    partial void DeletePurchaseJewelry(PurchaseJewelry instance);
    partial void InsertSale(Sale instance);
    partial void UpdateSale(Sale instance);
    partial void DeleteSale(Sale instance);
    #endregion
		
		public DataClassesPOSDBDataContext() : 
				base(global::WindowsFormsApplication6.Properties.Settings.Default.POSDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPOSDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPOSDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPOSDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesPOSDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Loan> Loans
		{
			get
			{
				return this.GetTable<Loan>();
			}
		}
		
		public System.Data.Linq.Table<LoanAutomotive> LoanAutomotives
		{
			get
			{
				return this.GetTable<LoanAutomotive>();
			}
		}
		
		public System.Data.Linq.Table<LoanFirearm> LoanFirearms
		{
			get
			{
				return this.GetTable<LoanFirearm>();
			}
		}
		
		public System.Data.Linq.Table<LoanGeneral> LoanGenerals
		{
			get
			{
				return this.GetTable<LoanGeneral>();
			}
		}
		
		public System.Data.Linq.Table<LoanJewelry> LoanJewelries
		{
			get
			{
				return this.GetTable<LoanJewelry>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseAutomotive> PurchaseAutomotives
		{
			get
			{
				return this.GetTable<PurchaseAutomotive>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseFirearm> PurchaseFirearms
		{
			get
			{
				return this.GetTable<PurchaseFirearm>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseGeneral> PurchaseGenerals
		{
			get
			{
				return this.GetTable<PurchaseGeneral>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseJewelry> PurchaseJewelries
		{
			get
			{
				return this.GetTable<PurchaseJewelry>();
			}
		}
		
		public System.Data.Linq.Table<Sale> Sales
		{
			get
			{
				return this.GetTable<Sale>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _FName;
		
		private string _LName;
		
		private string _Suffix;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _ID_Number;
		
		private System.Nullable<System.DateTime> _ID_Expiration;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Sex;
		
		private string _Race;
		
		private string _Height;
		
		private string _Weight;
		
		private string _Hair;
		
		private string _Eye_Color;
		
		private string _Cell;
		
		private string _Cell_Texting;
		
		private System.Nullable<System.DateTime> _Cell_Last_Updated;
		
		private string _Home_Phone;
		
		private string _Email_Address;
		
		private System.Nullable<System.DateTime> _Customer_Added_Date;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntitySet<Loan> _Loans;
		
		private EntitySet<Purchase> _Purchases;
		
		private EntitySet<Sale> _Sales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnID_NumberChanging(string value);
    partial void OnID_NumberChanged();
    partial void OnID_ExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnID_ExpirationChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnHeightChanging(string value);
    partial void OnHeightChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnHairChanging(string value);
    partial void OnHairChanged();
    partial void OnEye_ColorChanging(string value);
    partial void OnEye_ColorChanged();
    partial void OnCellChanging(string value);
    partial void OnCellChanged();
    partial void OnCell_TextingChanging(string value);
    partial void OnCell_TextingChanged();
    partial void OnCell_Last_UpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCell_Last_UpdatedChanged();
    partial void OnHome_PhoneChanging(string value);
    partial void OnHome_PhoneChanged();
    partial void OnEmail_AddressChanging(string value);
    partial void OnEmail_AddressChanged();
    partial void OnCustomer_Added_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomer_Added_DateChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public Customer()
		{
			this._Loans = new EntitySet<Loan>(new Action<Loan>(this.attach_Loans), new Action<Loan>(this.detach_Loans));
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			this._Sales = new EntitySet<Sale>(new Action<Sale>(this.attach_Sales), new Action<Sale>(this.detach_Sales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(MAX)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(MAX)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="NVarChar(50)")]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(MAX)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(MAX)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Number", DbType="NVarChar(MAX)")]
		public string ID_Number
		{
			get
			{
				return this._ID_Number;
			}
			set
			{
				if ((this._ID_Number != value))
				{
					this.OnID_NumberChanging(value);
					this.SendPropertyChanging();
					this._ID_Number = value;
					this.SendPropertyChanged("ID_Number");
					this.OnID_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Expiration", DbType="Date")]
		public System.Nullable<System.DateTime> ID_Expiration
		{
			get
			{
				return this._ID_Expiration;
			}
			set
			{
				if ((this._ID_Expiration != value))
				{
					this.OnID_ExpirationChanging(value);
					this.SendPropertyChanging();
					this._ID_Expiration = value;
					this.SendPropertyChanged("ID_Expiration");
					this.OnID_ExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="NVarChar(MAX)")]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="NVarChar(MAX)")]
		public string Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(MAX)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hair", DbType="NVarChar(MAX)")]
		public string Hair
		{
			get
			{
				return this._Hair;
			}
			set
			{
				if ((this._Hair != value))
				{
					this.OnHairChanging(value);
					this.SendPropertyChanging();
					this._Hair = value;
					this.SendPropertyChanged("Hair");
					this.OnHairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eye_Color", DbType="NVarChar(MAX)")]
		public string Eye_Color
		{
			get
			{
				return this._Eye_Color;
			}
			set
			{
				if ((this._Eye_Color != value))
				{
					this.OnEye_ColorChanging(value);
					this.SendPropertyChanging();
					this._Eye_Color = value;
					this.SendPropertyChanged("Eye_Color");
					this.OnEye_ColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell", DbType="NVarChar(MAX)")]
		public string Cell
		{
			get
			{
				return this._Cell;
			}
			set
			{
				if ((this._Cell != value))
				{
					this.OnCellChanging(value);
					this.SendPropertyChanging();
					this._Cell = value;
					this.SendPropertyChanged("Cell");
					this.OnCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell_Texting", DbType="NVarChar(MAX)")]
		public string Cell_Texting
		{
			get
			{
				return this._Cell_Texting;
			}
			set
			{
				if ((this._Cell_Texting != value))
				{
					this.OnCell_TextingChanging(value);
					this.SendPropertyChanging();
					this._Cell_Texting = value;
					this.SendPropertyChanged("Cell_Texting");
					this.OnCell_TextingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cell_Last_Updated", DbType="Date")]
		public System.Nullable<System.DateTime> Cell_Last_Updated
		{
			get
			{
				return this._Cell_Last_Updated;
			}
			set
			{
				if ((this._Cell_Last_Updated != value))
				{
					this.OnCell_Last_UpdatedChanging(value);
					this.SendPropertyChanging();
					this._Cell_Last_Updated = value;
					this.SendPropertyChanged("Cell_Last_Updated");
					this.OnCell_Last_UpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Home_Phone", DbType="NVarChar(MAX)")]
		public string Home_Phone
		{
			get
			{
				return this._Home_Phone;
			}
			set
			{
				if ((this._Home_Phone != value))
				{
					this.OnHome_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Home_Phone = value;
					this.SendPropertyChanged("Home_Phone");
					this.OnHome_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email_Address", DbType="NVarChar(MAX)")]
		public string Email_Address
		{
			get
			{
				return this._Email_Address;
			}
			set
			{
				if ((this._Email_Address != value))
				{
					this.OnEmail_AddressChanging(value);
					this.SendPropertyChanging();
					this._Email_Address = value;
					this.SendPropertyChanged("Email_Address");
					this.OnEmail_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Added_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Customer_Added_Date
		{
			get
			{
				return this._Customer_Added_Date;
			}
			set
			{
				if ((this._Customer_Added_Date != value))
				{
					this.OnCustomer_Added_DateChanging(value);
					this.SendPropertyChanging();
					this._Customer_Added_Date = value;
					this.SendPropertyChanged("Customer_Added_Date");
					this.OnCustomer_Added_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Loan", Storage="_Loans", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Loan> Loans
		{
			get
			{
				return this._Loans;
			}
			set
			{
				this._Loans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Purchase", Storage="_Purchases", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Sale", Storage="_Sales", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Sale> Sales
		{
			get
			{
				return this._Sales;
			}
			set
			{
				this._Sales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Sales(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Sales(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loan")]
	public partial class Loan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanID;
		
		private System.Nullable<int> _CustomerID;
		
		private string _LoanType;
		
		private EntitySet<LoanAutomotive> _LoanAutomotives;
		
		private EntitySet<LoanFirearm> _LoanFirearms;
		
		private EntitySet<LoanGeneral> _LoanGenerals;
		
		private EntitySet<LoanJewelry> _LoanJewelries;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIDChanging(int value);
    partial void OnLoanIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnLoanTypeChanging(string value);
    partial void OnLoanTypeChanged();
    #endregion
		
		public Loan()
		{
			this._LoanAutomotives = new EntitySet<LoanAutomotive>(new Action<LoanAutomotive>(this.attach_LoanAutomotives), new Action<LoanAutomotive>(this.detach_LoanAutomotives));
			this._LoanFirearms = new EntitySet<LoanFirearm>(new Action<LoanFirearm>(this.attach_LoanFirearms), new Action<LoanFirearm>(this.detach_LoanFirearms));
			this._LoanGenerals = new EntitySet<LoanGeneral>(new Action<LoanGeneral>(this.attach_LoanGenerals), new Action<LoanGeneral>(this.detach_LoanGenerals));
			this._LoanJewelries = new EntitySet<LoanJewelry>(new Action<LoanJewelry>(this.attach_LoanJewelries), new Action<LoanJewelry>(this.detach_LoanJewelries));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanType", DbType="NVarChar(50)")]
		public string LoanType
		{
			get
			{
				return this._LoanType;
			}
			set
			{
				if ((this._LoanType != value))
				{
					this.OnLoanTypeChanging(value);
					this.SendPropertyChanging();
					this._LoanType = value;
					this.SendPropertyChanged("LoanType");
					this.OnLoanTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanAutomotive", Storage="_LoanAutomotives", ThisKey="LoanID", OtherKey="LoanID")]
		public EntitySet<LoanAutomotive> LoanAutomotives
		{
			get
			{
				return this._LoanAutomotives;
			}
			set
			{
				this._LoanAutomotives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanFirearm", Storage="_LoanFirearms", ThisKey="LoanID", OtherKey="LoanID")]
		public EntitySet<LoanFirearm> LoanFirearms
		{
			get
			{
				return this._LoanFirearms;
			}
			set
			{
				this._LoanFirearms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanGeneral", Storage="_LoanGenerals", ThisKey="LoanID", OtherKey="LoanID")]
		public EntitySet<LoanGeneral> LoanGenerals
		{
			get
			{
				return this._LoanGenerals;
			}
			set
			{
				this._LoanGenerals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanJewelry", Storage="_LoanJewelries", ThisKey="LoanID", OtherKey="LoanID")]
		public EntitySet<LoanJewelry> LoanJewelries
		{
			get
			{
				return this._LoanJewelries;
			}
			set
			{
				this._LoanJewelries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Loan", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Loans.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Loans.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoanAutomotives(LoanAutomotive entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_LoanAutomotives(LoanAutomotive entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
		
		private void attach_LoanFirearms(LoanFirearm entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_LoanFirearms(LoanFirearm entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
		
		private void attach_LoanGenerals(LoanGeneral entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_LoanGenerals(LoanGeneral entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
		
		private void attach_LoanJewelries(LoanJewelry entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_LoanJewelries(LoanJewelry entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanAutomotive")]
	public partial class LoanAutomotive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutomotiveID;
		
		private System.Nullable<int> _LoanID;
		
		private string _Year;
		
		private string _TypeOfAutomobile;
		
		private string _Make;
		
		private string _BodyType;
		
		private string _Model;
		
		private string _PlateTag;
		
		private string _VINSerialNumber;
		
		private string _Color;
		
		private string _Description;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomotiveIDChanging(int value);
    partial void OnAutomotiveIDChanged();
    partial void OnLoanIDChanging(System.Nullable<int> value);
    partial void OnLoanIDChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnTypeOfAutomobileChanging(string value);
    partial void OnTypeOfAutomobileChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnBodyTypeChanging(string value);
    partial void OnBodyTypeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPlateTagChanging(string value);
    partial void OnPlateTagChanged();
    partial void OnVINSerialNumberChanging(string value);
    partial void OnVINSerialNumberChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public LoanAutomotive()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomotiveID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutomotiveID
		{
			get
			{
				return this._AutomotiveID;
			}
			set
			{
				if ((this._AutomotiveID != value))
				{
					this.OnAutomotiveIDChanging(value);
					this.SendPropertyChanging();
					this._AutomotiveID = value;
					this.SendPropertyChanged("AutomotiveID");
					this.OnAutomotiveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int")]
		public System.Nullable<int> LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfAutomobile", DbType="NVarChar(50)")]
		public string TypeOfAutomobile
		{
			get
			{
				return this._TypeOfAutomobile;
			}
			set
			{
				if ((this._TypeOfAutomobile != value))
				{
					this.OnTypeOfAutomobileChanging(value);
					this.SendPropertyChanging();
					this._TypeOfAutomobile = value;
					this.SendPropertyChanged("TypeOfAutomobile");
					this.OnTypeOfAutomobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyType", DbType="NVarChar(50)")]
		public string BodyType
		{
			get
			{
				return this._BodyType;
			}
			set
			{
				if ((this._BodyType != value))
				{
					this.OnBodyTypeChanging(value);
					this.SendPropertyChanging();
					this._BodyType = value;
					this.SendPropertyChanged("BodyType");
					this.OnBodyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateTag", DbType="NVarChar(50)")]
		public string PlateTag
		{
			get
			{
				return this._PlateTag;
			}
			set
			{
				if ((this._PlateTag != value))
				{
					this.OnPlateTagChanging(value);
					this.SendPropertyChanging();
					this._PlateTag = value;
					this.SendPropertyChanged("PlateTag");
					this.OnPlateTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VINSerialNumber", DbType="NVarChar(50)")]
		public string VINSerialNumber
		{
			get
			{
				return this._VINSerialNumber;
			}
			set
			{
				if ((this._VINSerialNumber != value))
				{
					this.OnVINSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._VINSerialNumber = value;
					this.SendPropertyChanged("VINSerialNumber");
					this.OnVINSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanAutomotive", Storage="_Loan", ThisKey="LoanID", OtherKey="LoanID", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.LoanAutomotives.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.LoanAutomotives.Add(this);
						this._LoanID = value.LoanID;
					}
					else
					{
						this._LoanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanFirearm")]
	public partial class LoanFirearm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FirearmID;
		
		private System.Nullable<int> _LoanID;
		
		private string _Type;
		
		private string _Make;
		
		private string _Action;
		
		private string _Model;
		
		private string _Caliber;
		
		private string _Importer;
		
		private string _SerialNumber;
		
		private string _Finish;
		
		private string _Description;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFirearmIDChanging(int value);
    partial void OnFirearmIDChanged();
    partial void OnLoanIDChanging(System.Nullable<int> value);
    partial void OnLoanIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnCaliberChanging(string value);
    partial void OnCaliberChanged();
    partial void OnImporterChanging(string value);
    partial void OnImporterChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnFinishChanging(string value);
    partial void OnFinishChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public LoanFirearm()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirearmID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FirearmID
		{
			get
			{
				return this._FirearmID;
			}
			set
			{
				if ((this._FirearmID != value))
				{
					this.OnFirearmIDChanging(value);
					this.SendPropertyChanging();
					this._FirearmID = value;
					this.SendPropertyChanged("FirearmID");
					this.OnFirearmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int")]
		public System.Nullable<int> LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caliber", DbType="NVarChar(50)")]
		public string Caliber
		{
			get
			{
				return this._Caliber;
			}
			set
			{
				if ((this._Caliber != value))
				{
					this.OnCaliberChanging(value);
					this.SendPropertyChanging();
					this._Caliber = value;
					this.SendPropertyChanged("Caliber");
					this.OnCaliberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importer", DbType="NVarChar(50)")]
		public string Importer
		{
			get
			{
				return this._Importer;
			}
			set
			{
				if ((this._Importer != value))
				{
					this.OnImporterChanging(value);
					this.SendPropertyChanging();
					this._Importer = value;
					this.SendPropertyChanged("Importer");
					this.OnImporterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finish", DbType="NVarChar(50)")]
		public string Finish
		{
			get
			{
				return this._Finish;
			}
			set
			{
				if ((this._Finish != value))
				{
					this.OnFinishChanging(value);
					this.SendPropertyChanging();
					this._Finish = value;
					this.SendPropertyChanged("Finish");
					this.OnFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanFirearm", Storage="_Loan", ThisKey="LoanID", OtherKey="LoanID", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.LoanFirearms.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.LoanFirearms.Add(this);
						this._LoanID = value.LoanID;
					}
					else
					{
						this._LoanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanGeneral")]
	public partial class LoanGeneral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenrealID;
		
		private System.Nullable<int> _LoanID;
		
		private string _Category;
		
		private string _SubCategory;
		
		private string _Make;
		
		private string _Model;
		
		private string _Description;
		
		private string _SerialNumber;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenrealIDChanging(int value);
    partial void OnGenrealIDChanged();
    partial void OnLoanIDChanging(System.Nullable<int> value);
    partial void OnLoanIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSubCategoryChanging(string value);
    partial void OnSubCategoryChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public LoanGeneral()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenrealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GenrealID
		{
			get
			{
				return this._GenrealID;
			}
			set
			{
				if ((this._GenrealID != value))
				{
					this.OnGenrealIDChanging(value);
					this.SendPropertyChanging();
					this._GenrealID = value;
					this.SendPropertyChanged("GenrealID");
					this.OnGenrealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int")]
		public System.Nullable<int> LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="NVarChar(50)")]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this.OnSubCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubCategory = value;
					this.SendPropertyChanged("SubCategory");
					this.OnSubCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanGeneral", Storage="_Loan", ThisKey="LoanID", OtherKey="LoanID", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.LoanGenerals.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.LoanGenerals.Add(this);
						this._LoanID = value.LoanID;
					}
					else
					{
						this._LoanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanJewelry")]
	public partial class LoanJewelry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JewelryID;
		
		private System.Nullable<int> _LoanID;
		
		private string _Type;
		
		private string _Metal;
		
		private string _Size;
		
		private string _Style;
		
		private string _Sex;
		
		private string _StoneType;
		
		private string _Purity;
		
		private string _StonesNumber;
		
		private string _Weight;
		
		private string _AddtionalInfo;
		
		private string _Description;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJewelryIDChanging(int value);
    partial void OnJewelryIDChanged();
    partial void OnLoanIDChanging(System.Nullable<int> value);
    partial void OnLoanIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnMetalChanging(string value);
    partial void OnMetalChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnStoneTypeChanging(string value);
    partial void OnStoneTypeChanged();
    partial void OnPurityChanging(string value);
    partial void OnPurityChanged();
    partial void OnStonesNumberChanging(string value);
    partial void OnStonesNumberChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnAddtionalInfoChanging(string value);
    partial void OnAddtionalInfoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public LoanJewelry()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JewelryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JewelryID
		{
			get
			{
				return this._JewelryID;
			}
			set
			{
				if ((this._JewelryID != value))
				{
					this.OnJewelryIDChanging(value);
					this.SendPropertyChanging();
					this._JewelryID = value;
					this.SendPropertyChanged("JewelryID");
					this.OnJewelryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int")]
		public System.Nullable<int> LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metal", DbType="NVarChar(50)")]
		public string Metal
		{
			get
			{
				return this._Metal;
			}
			set
			{
				if ((this._Metal != value))
				{
					this.OnMetalChanging(value);
					this.SendPropertyChanging();
					this._Metal = value;
					this.SendPropertyChanged("Metal");
					this.OnMetalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style", DbType="NVarChar(50)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoneType", DbType="NVarChar(50)")]
		public string StoneType
		{
			get
			{
				return this._StoneType;
			}
			set
			{
				if ((this._StoneType != value))
				{
					this.OnStoneTypeChanging(value);
					this.SendPropertyChanging();
					this._StoneType = value;
					this.SendPropertyChanged("StoneType");
					this.OnStoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purity", DbType="NVarChar(50)")]
		public string Purity
		{
			get
			{
				return this._Purity;
			}
			set
			{
				if ((this._Purity != value))
				{
					this.OnPurityChanging(value);
					this.SendPropertyChanging();
					this._Purity = value;
					this.SendPropertyChanged("Purity");
					this.OnPurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StonesNumber", DbType="NVarChar(50)")]
		public string StonesNumber
		{
			get
			{
				return this._StonesNumber;
			}
			set
			{
				if ((this._StonesNumber != value))
				{
					this.OnStonesNumberChanging(value);
					this.SendPropertyChanging();
					this._StonesNumber = value;
					this.SendPropertyChanged("StonesNumber");
					this.OnStonesNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddtionalInfo", DbType="NVarChar(50)")]
		public string AddtionalInfo
		{
			get
			{
				return this._AddtionalInfo;
			}
			set
			{
				if ((this._AddtionalInfo != value))
				{
					this.OnAddtionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AddtionalInfo = value;
					this.SendPropertyChanged("AddtionalInfo");
					this.OnAddtionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanJewelry", Storage="_Loan", ThisKey="LoanID", OtherKey="LoanID", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.LoanJewelries.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.LoanJewelries.Add(this);
						this._LoanID = value.LoanID;
					}
					else
					{
						this._LoanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseID;
		
		private System.Nullable<int> _CustomerID;
		
		private string _PurchaseType;
		
		private EntitySet<PurchaseAutomotive> _PurchaseAutomotives;
		
		private EntitySet<PurchaseFirearm> _PurchaseFirearms;
		
		private EntitySet<PurchaseGeneral> _PurchaseGenerals;
		
		private EntitySet<PurchaseJewelry> _PurchaseJewelries;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(int value);
    partial void OnPurchaseIDChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnPurchaseTypeChanging(string value);
    partial void OnPurchaseTypeChanged();
    #endregion
		
		public Purchase()
		{
			this._PurchaseAutomotives = new EntitySet<PurchaseAutomotive>(new Action<PurchaseAutomotive>(this.attach_PurchaseAutomotives), new Action<PurchaseAutomotive>(this.detach_PurchaseAutomotives));
			this._PurchaseFirearms = new EntitySet<PurchaseFirearm>(new Action<PurchaseFirearm>(this.attach_PurchaseFirearms), new Action<PurchaseFirearm>(this.detach_PurchaseFirearms));
			this._PurchaseGenerals = new EntitySet<PurchaseGeneral>(new Action<PurchaseGeneral>(this.attach_PurchaseGenerals), new Action<PurchaseGeneral>(this.detach_PurchaseGenerals));
			this._PurchaseJewelries = new EntitySet<PurchaseJewelry>(new Action<PurchaseJewelry>(this.attach_PurchaseJewelries), new Action<PurchaseJewelry>(this.detach_PurchaseJewelries));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseType", DbType="NVarChar(50)")]
		public string PurchaseType
		{
			get
			{
				return this._PurchaseType;
			}
			set
			{
				if ((this._PurchaseType != value))
				{
					this.OnPurchaseTypeChanging(value);
					this.SendPropertyChanging();
					this._PurchaseType = value;
					this.SendPropertyChanged("PurchaseType");
					this.OnPurchaseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseAutomotive", Storage="_PurchaseAutomotives", ThisKey="PurchaseID", OtherKey="PurchaseID")]
		public EntitySet<PurchaseAutomotive> PurchaseAutomotives
		{
			get
			{
				return this._PurchaseAutomotives;
			}
			set
			{
				this._PurchaseAutomotives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseFirearm", Storage="_PurchaseFirearms", ThisKey="PurchaseID", OtherKey="PurchaseID")]
		public EntitySet<PurchaseFirearm> PurchaseFirearms
		{
			get
			{
				return this._PurchaseFirearms;
			}
			set
			{
				this._PurchaseFirearms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseGeneral", Storage="_PurchaseGenerals", ThisKey="PurchaseID", OtherKey="PurchaseID")]
		public EntitySet<PurchaseGeneral> PurchaseGenerals
		{
			get
			{
				return this._PurchaseGenerals;
			}
			set
			{
				this._PurchaseGenerals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseJewelry", Storage="_PurchaseJewelries", ThisKey="PurchaseID", OtherKey="PurchaseID")]
		public EntitySet<PurchaseJewelry> PurchaseJewelries
		{
			get
			{
				return this._PurchaseJewelries;
			}
			set
			{
				this._PurchaseJewelries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Purchase", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseAutomotives(PurchaseAutomotive entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = this;
		}
		
		private void detach_PurchaseAutomotives(PurchaseAutomotive entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = null;
		}
		
		private void attach_PurchaseFirearms(PurchaseFirearm entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = this;
		}
		
		private void detach_PurchaseFirearms(PurchaseFirearm entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = null;
		}
		
		private void attach_PurchaseGenerals(PurchaseGeneral entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = this;
		}
		
		private void detach_PurchaseGenerals(PurchaseGeneral entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = null;
		}
		
		private void attach_PurchaseJewelries(PurchaseJewelry entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = this;
		}
		
		private void detach_PurchaseJewelries(PurchaseJewelry entity)
		{
			this.SendPropertyChanging();
			entity.Purchase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseAutomotive")]
	public partial class PurchaseAutomotive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutomotiveID;
		
		private System.Nullable<int> _PurchaseID;
		
		private string _Year;
		
		private string _TypeOfAutomobile;
		
		private string _Make;
		
		private string _BodyType;
		
		private string _Model;
		
		private string _PlateTag;
		
		private string _VINSerialNumber;
		
		private string _Color;
		
		private string _Description;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Purchase> _Purchase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutomotiveIDChanging(int value);
    partial void OnAutomotiveIDChanged();
    partial void OnPurchaseIDChanging(System.Nullable<int> value);
    partial void OnPurchaseIDChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnTypeOfAutomobileChanging(string value);
    partial void OnTypeOfAutomobileChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnBodyTypeChanging(string value);
    partial void OnBodyTypeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPlateTagChanging(string value);
    partial void OnPlateTagChanged();
    partial void OnVINSerialNumberChanging(string value);
    partial void OnVINSerialNumberChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public PurchaseAutomotive()
		{
			this._Purchase = default(EntityRef<Purchase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutomotiveID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AutomotiveID
		{
			get
			{
				return this._AutomotiveID;
			}
			set
			{
				if ((this._AutomotiveID != value))
				{
					this.OnAutomotiveIDChanging(value);
					this.SendPropertyChanging();
					this._AutomotiveID = value;
					this.SendPropertyChanged("AutomotiveID");
					this.OnAutomotiveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int")]
		public System.Nullable<int> PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					if (this._Purchase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="NVarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfAutomobile", DbType="NVarChar(50)")]
		public string TypeOfAutomobile
		{
			get
			{
				return this._TypeOfAutomobile;
			}
			set
			{
				if ((this._TypeOfAutomobile != value))
				{
					this.OnTypeOfAutomobileChanging(value);
					this.SendPropertyChanging();
					this._TypeOfAutomobile = value;
					this.SendPropertyChanged("TypeOfAutomobile");
					this.OnTypeOfAutomobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyType", DbType="NVarChar(50)")]
		public string BodyType
		{
			get
			{
				return this._BodyType;
			}
			set
			{
				if ((this._BodyType != value))
				{
					this.OnBodyTypeChanging(value);
					this.SendPropertyChanging();
					this._BodyType = value;
					this.SendPropertyChanged("BodyType");
					this.OnBodyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlateTag", DbType="NVarChar(50)")]
		public string PlateTag
		{
			get
			{
				return this._PlateTag;
			}
			set
			{
				if ((this._PlateTag != value))
				{
					this.OnPlateTagChanging(value);
					this.SendPropertyChanging();
					this._PlateTag = value;
					this.SendPropertyChanged("PlateTag");
					this.OnPlateTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VINSerialNumber", DbType="NVarChar(50)")]
		public string VINSerialNumber
		{
			get
			{
				return this._VINSerialNumber;
			}
			set
			{
				if ((this._VINSerialNumber != value))
				{
					this.OnVINSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._VINSerialNumber = value;
					this.SendPropertyChanged("VINSerialNumber");
					this.OnVINSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseAutomotive", Storage="_Purchase", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
		public Purchase Purchase
		{
			get
			{
				return this._Purchase.Entity;
			}
			set
			{
				Purchase previousValue = this._Purchase.Entity;
				if (((previousValue != value) 
							|| (this._Purchase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purchase.Entity = null;
						previousValue.PurchaseAutomotives.Remove(this);
					}
					this._Purchase.Entity = value;
					if ((value != null))
					{
						value.PurchaseAutomotives.Add(this);
						this._PurchaseID = value.PurchaseID;
					}
					else
					{
						this._PurchaseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Purchase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseFirearm")]
	public partial class PurchaseFirearm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FirearmID;
		
		private System.Nullable<int> _PurchaseID;
		
		private string _Type;
		
		private string _Make;
		
		private string _Action;
		
		private string _Model;
		
		private string _Caliber;
		
		private string _Importer;
		
		private string _SerialNumber;
		
		private string _Finish;
		
		private string _Description;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Purchase> _Purchase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFirearmIDChanging(int value);
    partial void OnFirearmIDChanged();
    partial void OnPurchaseIDChanging(System.Nullable<int> value);
    partial void OnPurchaseIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnCaliberChanging(string value);
    partial void OnCaliberChanged();
    partial void OnImporterChanging(string value);
    partial void OnImporterChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnFinishChanging(string value);
    partial void OnFinishChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public PurchaseFirearm()
		{
			this._Purchase = default(EntityRef<Purchase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirearmID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FirearmID
		{
			get
			{
				return this._FirearmID;
			}
			set
			{
				if ((this._FirearmID != value))
				{
					this.OnFirearmIDChanging(value);
					this.SendPropertyChanging();
					this._FirearmID = value;
					this.SendPropertyChanged("FirearmID");
					this.OnFirearmIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int")]
		public System.Nullable<int> PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					if (this._Purchase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caliber", DbType="NVarChar(50)")]
		public string Caliber
		{
			get
			{
				return this._Caliber;
			}
			set
			{
				if ((this._Caliber != value))
				{
					this.OnCaliberChanging(value);
					this.SendPropertyChanging();
					this._Caliber = value;
					this.SendPropertyChanged("Caliber");
					this.OnCaliberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importer", DbType="NVarChar(50)")]
		public string Importer
		{
			get
			{
				return this._Importer;
			}
			set
			{
				if ((this._Importer != value))
				{
					this.OnImporterChanging(value);
					this.SendPropertyChanging();
					this._Importer = value;
					this.SendPropertyChanged("Importer");
					this.OnImporterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Finish", DbType="NVarChar(50)")]
		public string Finish
		{
			get
			{
				return this._Finish;
			}
			set
			{
				if ((this._Finish != value))
				{
					this.OnFinishChanging(value);
					this.SendPropertyChanging();
					this._Finish = value;
					this.SendPropertyChanged("Finish");
					this.OnFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseFirearm", Storage="_Purchase", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
		public Purchase Purchase
		{
			get
			{
				return this._Purchase.Entity;
			}
			set
			{
				Purchase previousValue = this._Purchase.Entity;
				if (((previousValue != value) 
							|| (this._Purchase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purchase.Entity = null;
						previousValue.PurchaseFirearms.Remove(this);
					}
					this._Purchase.Entity = value;
					if ((value != null))
					{
						value.PurchaseFirearms.Add(this);
						this._PurchaseID = value.PurchaseID;
					}
					else
					{
						this._PurchaseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Purchase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseGeneral")]
	public partial class PurchaseGeneral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenrealID;
		
		private System.Nullable<int> _PurchaseID;
		
		private string _Category;
		
		private string _SubCategory;
		
		private string _Make;
		
		private string _Model;
		
		private string _Description;
		
		private string _SerialNumber;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Purchase> _Purchase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenrealIDChanging(int value);
    partial void OnGenrealIDChanged();
    partial void OnPurchaseIDChanging(System.Nullable<int> value);
    partial void OnPurchaseIDChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSubCategoryChanging(string value);
    partial void OnSubCategoryChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public PurchaseGeneral()
		{
			this._Purchase = default(EntityRef<Purchase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenrealID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GenrealID
		{
			get
			{
				return this._GenrealID;
			}
			set
			{
				if ((this._GenrealID != value))
				{
					this.OnGenrealIDChanging(value);
					this.SendPropertyChanging();
					this._GenrealID = value;
					this.SendPropertyChanged("GenrealID");
					this.OnGenrealIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int")]
		public System.Nullable<int> PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					if (this._Purchase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="NVarChar(50)")]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this.OnSubCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubCategory = value;
					this.SendPropertyChanged("SubCategory");
					this.OnSubCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseGeneral", Storage="_Purchase", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
		public Purchase Purchase
		{
			get
			{
				return this._Purchase.Entity;
			}
			set
			{
				Purchase previousValue = this._Purchase.Entity;
				if (((previousValue != value) 
							|| (this._Purchase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purchase.Entity = null;
						previousValue.PurchaseGenerals.Remove(this);
					}
					this._Purchase.Entity = value;
					if ((value != null))
					{
						value.PurchaseGenerals.Add(this);
						this._PurchaseID = value.PurchaseID;
					}
					else
					{
						this._PurchaseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Purchase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseJewelry")]
	public partial class PurchaseJewelry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JewelryID;
		
		private System.Nullable<int> _PurchaseID;
		
		private string _Type;
		
		private string _Metal;
		
		private string _Size;
		
		private string _Style;
		
		private string _Sex;
		
		private string _StoneType;
		
		private string _Purity;
		
		private string _StonesNumber;
		
		private string _Weight;
		
		private string _AddtionalInfo;
		
		private string _Description;
		
		private string _ItemNotes;
		
		private System.Nullable<int> _AmountLoaned;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntityRef<Purchase> _Purchase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJewelryIDChanging(int value);
    partial void OnJewelryIDChanged();
    partial void OnPurchaseIDChanging(System.Nullable<int> value);
    partial void OnPurchaseIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnMetalChanging(string value);
    partial void OnMetalChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnStoneTypeChanging(string value);
    partial void OnStoneTypeChanged();
    partial void OnPurityChanging(string value);
    partial void OnPurityChanged();
    partial void OnStonesNumberChanging(string value);
    partial void OnStonesNumberChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnAddtionalInfoChanging(string value);
    partial void OnAddtionalInfoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnItemNotesChanging(string value);
    partial void OnItemNotesChanged();
    partial void OnAmountLoanedChanging(System.Nullable<int> value);
    partial void OnAmountLoanedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public PurchaseJewelry()
		{
			this._Purchase = default(EntityRef<Purchase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JewelryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JewelryID
		{
			get
			{
				return this._JewelryID;
			}
			set
			{
				if ((this._JewelryID != value))
				{
					this.OnJewelryIDChanging(value);
					this.SendPropertyChanging();
					this._JewelryID = value;
					this.SendPropertyChanged("JewelryID");
					this.OnJewelryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="Int")]
		public System.Nullable<int> PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					if (this._Purchase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metal", DbType="NVarChar(50)")]
		public string Metal
		{
			get
			{
				return this._Metal;
			}
			set
			{
				if ((this._Metal != value))
				{
					this.OnMetalChanging(value);
					this.SendPropertyChanging();
					this._Metal = value;
					this.SendPropertyChanged("Metal");
					this.OnMetalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style", DbType="NVarChar(50)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NVarChar(50)")]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoneType", DbType="NVarChar(50)")]
		public string StoneType
		{
			get
			{
				return this._StoneType;
			}
			set
			{
				if ((this._StoneType != value))
				{
					this.OnStoneTypeChanging(value);
					this.SendPropertyChanging();
					this._StoneType = value;
					this.SendPropertyChanged("StoneType");
					this.OnStoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Purity", DbType="NVarChar(50)")]
		public string Purity
		{
			get
			{
				return this._Purity;
			}
			set
			{
				if ((this._Purity != value))
				{
					this.OnPurityChanging(value);
					this.SendPropertyChanging();
					this._Purity = value;
					this.SendPropertyChanged("Purity");
					this.OnPurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StonesNumber", DbType="NVarChar(50)")]
		public string StonesNumber
		{
			get
			{
				return this._StonesNumber;
			}
			set
			{
				if ((this._StonesNumber != value))
				{
					this.OnStonesNumberChanging(value);
					this.SendPropertyChanging();
					this._StonesNumber = value;
					this.SendPropertyChanged("StonesNumber");
					this.OnStonesNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddtionalInfo", DbType="NVarChar(50)")]
		public string AddtionalInfo
		{
			get
			{
				return this._AddtionalInfo;
			}
			set
			{
				if ((this._AddtionalInfo != value))
				{
					this.OnAddtionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AddtionalInfo = value;
					this.SendPropertyChanged("AddtionalInfo");
					this.OnAddtionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNotes", DbType="NVarChar(50)")]
		public string ItemNotes
		{
			get
			{
				return this._ItemNotes;
			}
			set
			{
				if ((this._ItemNotes != value))
				{
					this.OnItemNotesChanging(value);
					this.SendPropertyChanging();
					this._ItemNotes = value;
					this.SendPropertyChanged("ItemNotes");
					this.OnItemNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountLoaned", DbType="Int")]
		public System.Nullable<int> AmountLoaned
		{
			get
			{
				return this._AmountLoaned;
			}
			set
			{
				if ((this._AmountLoaned != value))
				{
					this.OnAmountLoanedChanging(value);
					this.SendPropertyChanging();
					this._AmountLoaned = value;
					this.SendPropertyChanged("AmountLoaned");
					this.OnAmountLoanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Purchase_PurchaseJewelry", Storage="_Purchase", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
		public Purchase Purchase
		{
			get
			{
				return this._Purchase.Entity;
			}
			set
			{
				Purchase previousValue = this._Purchase.Entity;
				if (((previousValue != value) 
							|| (this._Purchase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Purchase.Entity = null;
						previousValue.PurchaseJewelries.Remove(this);
					}
					this._Purchase.Entity = value;
					if ((value != null))
					{
						value.PurchaseJewelries.Add(this);
						this._PurchaseID = value.PurchaseID;
					}
					else
					{
						this._PurchaseID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Purchase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale")]
	public partial class Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SaleId;
		
		private System.Nullable<int> _CustomerID;
		
		private string _ItemNumber;
		
		private string _Cateory;
		
		private string _Make;
		
		private string _Model;
		
		private string _ItemDescription;
		
		private string _Quantity;
		
		private string _Price;
		
		private string _ExtendedPrice;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSaleIdChanging(int value);
    partial void OnSaleIdChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    partial void OnCateoryChanging(string value);
    partial void OnCateoryChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnQuantityChanging(string value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnExtendedPriceChanging(string value);
    partial void OnExtendedPriceChanged();
    #endregion
		
		public Sale()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SaleId
		{
			get
			{
				return this._SaleId;
			}
			set
			{
				if ((this._SaleId != value))
				{
					this.OnSaleIdChanging(value);
					this.SendPropertyChanging();
					this._SaleId = value;
					this.SendPropertyChanged("SaleId");
					this.OnSaleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="NVarChar(50)")]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cateory", DbType="NVarChar(50)")]
		public string Cateory
		{
			get
			{
				return this._Cateory;
			}
			set
			{
				if ((this._Cateory != value))
				{
					this.OnCateoryChanging(value);
					this.SendPropertyChanging();
					this._Cateory = value;
					this.SendPropertyChanged("Cateory");
					this.OnCateoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="NVarChar(50)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(50)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(50)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="NVarChar(50)")]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="NVarChar(50)")]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedPrice", DbType="NVarChar(50)")]
		public string ExtendedPrice
		{
			get
			{
				return this._ExtendedPrice;
			}
			set
			{
				if ((this._ExtendedPrice != value))
				{
					this.OnExtendedPriceChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPrice = value;
					this.SendPropertyChanged("ExtendedPrice");
					this.OnExtendedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Sale", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Sales.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Sales.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
